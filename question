#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'

def usage
  "Usage:\n question [-n <name>] [--] <question_text>"
end

def salutation(name)
  prefix = ['Howdy,', 'Yo,', 'Hello,', 'Hay,'].sample
  suffix = Array.new(3, '.')
  suffix << [", how's it going?", ", I've got a quick question for you."]
  suffix = suffix.sample
  "#{prefix} #{name}#{suffix}"
end

def question_text
  ARGV.join ' '
end

def outro
  imperative = 'Please let me know when you get a chance--'
  preface = ['I know',
             'I understand',
             "I'm under the impression",
             'I believe',
             'I think'].sample
  suffix = ["you're busy right now.",
            "you've got a lot of plates spinning.",
            "you're juggling a lot."].sample
  [imperative + preface, suffix].join ' '
end

def format_output(options)
  name = options[:name]

  out_ary = []
  out_ary << salutation(name) unless name.to_s.empty?
  out_ary << question_text
  out_ary << outro
  out_ary.join(' ')
end

def parse_options!
  options = {}
  OptionParser.new do |opts|
    opts.banner = usage
    opts.on('-n', '--name NAME', "Recipient's name") do |name|
      options[:name] = name
    end
  end.parse!
  options
end

def main
  options = parse_options!
  puts format_output(options)
end

main unless ENV['ENV'] == 'test'
